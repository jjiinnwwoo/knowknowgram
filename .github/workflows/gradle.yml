name: knowknowgram CD
on:
  push:
    branches: [ "main" , "dev" ]
  pull_request:
    branches: [ "main" , "dev" ]
permissions:
  contents: read
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Set Yaml
      uses: microsoft/variable-substitution@v1
      with:
        files: ./src/main/resources/application-prod.yml 
      env:
        spring.datasource.url: ${{ secrets.DB_URL }}
        spring.datasource.username: ${{ secrets.DB_USERNAME }}
        spring.datasource.password: ${{ secrets.DB_PASSWORD }}
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build -x test
		
    - name: Docker build
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build -f knowknowgram.Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/knowknowgram .
        docker tag ${{ secrets.DOCKER_USERNAME }}/knowknowgram ${{ secrets.DOCKER_USERNAME }}/knowknowgram:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/knowknowgram:latest
		
    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ec2-user
        key: ${{ secrets.PRIVATE_KEY }}
        script: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/knowknowgram:latest
          docker stop $(docker ps -a -q)
          docker rm $(docker ps --filter 'status=exited' -a -q)
          docker image prune -a -f
          cd ~/
          docker run -d --env-file ./.env --name knowknowgram -p 80:8080 ${{ secrets.DOCKER_USERNAME }}/knowknowgram:latest
